server.port= 9090

#We giving name Application 
spring.application.name= API-GATEWAY

#Configuration for implementing service discovery client

eureka.instance.prefer-ip-address= true
#When you set eureka.instance.prefer-ip-address=true, it means that the service instance will 
#register with Eureka using its IP address instead of its hostname
eureka.client.fetch-registry= true
eureka.client.register-with-eureka= true
eureka.client.service-url.defaultZone= http://localhost:8761/eureka
#it will use above url to register with Eureka server.

#For UserService (lb used because we have service registry)
spring.cloud.gateway.routes[0].id= USER-SERVICE
spring.cloud.gateway.routes[0].uri= lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/** 
#In this case, requests matching the specified paths will be routed to the 
#defined URIs.

#For HotelService
spring.cloud.gateway.routes[1].id= HOTEL-SERVICE
spring.cloud.gateway.routes[1].uri= lb://HOTEL-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/hotel/**,/staff/** 

#For RatingService
spring.cloud.gateway.routes[2].id= RATING-SERVICE
spring.cloud.gateway.routes[2].uri= lb://RATING-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/rating/** 

# Okta Configuration
okta.oauth2.issuer= https://dev-37074283.okta.com/oauth2/default
okta.oauth2.audience= api://default
okta.oauth2.client-id= 0oaclkobkjNpG4lXb5d7
okta.oauth2.client-secret= CdI8oc3JBTsRwdwfOypVAAMh0YXEEufqgzWkyK8yZMn7EpaRE52HjD7BXSl5c1Wo
okta.oauth2.scopes= openid, profile, email, offline_access





